# File generated by peppercorn-v1.1.1

# Domains (26) 
length fB = 7
length fO1 = 7
length fO2 = 7
length fX1 = 7
length fX2 = 7
length hB = 15
length hO1 = 15
length hO2 = 15
length hX1 = 15
length hX2 = 15
length mO1 = 15
length mO2 = 15
length mX1 = 15
length mX2 = 15
length sO1 = 7
length sO2 = 7
length sX1 = 7
length sX2 = 7
length buff = 30


# Resting complexes (14) 
R_NUM_Helper_1 = fB hB fB @initial 4000 nM
R_NUM_15 = sX1( mX1( fX1( hX1 + ) ) ) fB*( hB*( fB*( + ) ) )
R_NUM_Back = fB sX1 mX1 @initial 0 nM
R_NUM_React = hX1 fB( hB( + fB( sX1( mX1( + fX1* ) ) ) ) ) @initial 4000 nM
R_NUM_34 = fX2( hX2( fX1( + hX1( fB( hB + ) ) ) ) )
R_NUM_23 = hX1( fB( hB + ) ) fX1* hX2*( fX2*( + sX2 mX2 ) )
R_NUM_ProduceBX1X2 = sX2 mX2 fX2( hX2( + sX1 mX1 fX1( hX1( + fB* ) ) ) ) @initial 4000 nM
R_NUM_9 = fX1*( mX1*( sX1*( fB* hB*( fB*( + hX1 ) ) + ) ) ) hX1
R_NUM_Helper_2 = fX2 hX2 fX1 @initial 4000 nM
R_NUM_14 = hX1 fB hB
R_NUM_Buffer = buff @initial 1 nM
X1 = sX1 mX1 fX1 hX1 @initial 1 nM # This doesn't matter.  
X2 = sX2 mX2 fX2 hX2 @initial 0 nM
O1 = sO1 mO1 fO1 hO1 @initial 19 nM
O2 = sO2 mO2 fO2 hO2 @initial 0 nM

# Resting macrostates (14) 
macrostate R_NUM_Helper_1 = [R_NUM_Helper_1]
macrostate R_NUM_15 = [R_NUM_15]
macrostate R_NUM_Back = [R_NUM_Back]
macrostate R_NUM_React = [R_NUM_React]
macrostate R_NUM_34 = [R_NUM_34]
macrostate R_NUM_23 = [R_NUM_23]
macrostate R_NUM_ProduceBX1X2 = [R_NUM_ProduceBX1X2]
macrostate R_NUM_9 = [R_NUM_9]
macrostate R_NUM_Helper_2 = [R_NUM_Helper_2]
macrostate R_NUM_14 = [R_NUM_14]
macrostate O1 = [O1]
macrostate O2 = [O2]
macrostate X1 = [X1]
macrostate X2 = [X2]
macrostate R_NUM_Buffer = [R_NUM_Buffer]

# Condensed reactions (6) 
reaction [condensed    = 0.001 /nM/s ] R_NUM_Helper_1 + R_NUM_9 -> R_NUM_15 + R_NUM_14
# reaction [condensed    = 0.001 /nM/s ] R_NUM_Back + R_NUM_9 -> R_NUM_React + X1 # Verified.
reaction [condensed    = 0.0001 /nM/s ] R_NUM_React + X1 -> R_NUM_Back + R_NUM_9
reaction [condensed    =  0.001 /nM/s ] R_NUM_23 + R_NUM_Helper_2 -> R_NUM_34 + X2
reaction [condensed    = 0.0001 /nM/s ] R_NUM_23 + X1 -> R_NUM_ProduceBX1X2 + R_NUM_14
reaction [condensed    = 0.0001 /nM/s ] R_NUM_ProduceBX1X2 + R_NUM_14 -> R_NUM_23 + X1
reaction [condensed    = 0.18 /s ] R_NUM_Buffer -> R_NUM_Buffer + R_NUM_ProduceBX1X2
reaction [condensed    = 0.18 /s ] R_NUM_Buffer -> R_NUM_Buffer + R_NUM_React
reaction [condensed    = 0.18 /s ] R_NUM_Buffer -> R_NUM_Buffer + R_NUM_Helper_1
reaction [condensed    = 0.18 /s ] R_NUM_Buffer -> R_NUM_Buffer + R_NUM_Helper_2

reaction [condensed    = 0.2 /s ] O1 -> O1 + O2
